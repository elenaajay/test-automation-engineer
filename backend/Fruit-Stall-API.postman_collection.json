{
	"info": {
		"_postman_id": "98b608ba-bef9-4b32-86bc-cd806ed50e69",
		"name": "Fruit Stall API",
		"description": "This API is used for testing purpose only.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19918841"
	},
	"item": [
		{
			"name": "Status code 200 OK",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:3000/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "3000",
					"path": [
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "create order",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const currentDateTime = new Date().toISOString();",
							"pm.environment.set(\"timestamp\", currentDateTime);",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							"const jsonData = pm.response.json();",
							"const product_id = jsonData.product_id",
							"pm.environment.set('product_id', product_id);",
							"console.log(\"product_id\", product_id);"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"product_id\": 1,\n  \"quantity\": 1,\n  \"product_name\": \"Mangosteen\",\n  \"price\": 12,\n  \"created_at\": \"{{timestamp}}\",\n  \"updated_at\": \"{{timestamp}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_Url}}/orders",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "order list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"const product_id = jsonData[0].id; ",
							"pm.environment.set('product_id', product_id)",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/orders",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"orders"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get order id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/orders/{{product_id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"orders",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "patch product order",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PATCH",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/orders/{{product_id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"orders",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/orders/{{product_id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"orders",
						"{{product_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "create product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201 Created\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Durian\",\n  \"description\": \"Durian Musang King\",\n  \"price\": 12\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_Url}}/products",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "list all products",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							"const jsonData = pm.response.json();",
							"const id = jsonData[10].id; ",
							"pm.environment.set('id', id)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/products",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"products"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/products/{{id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update  product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/products/{{id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "delete product",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200 OK\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{base_Url}}/products/{{id}}",
					"host": [
						"{{base_Url}}"
					],
					"path": [
						"products",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"",
					"let base_Url = 'http://localhost:3000'",
					"",
					"pm.environment.set('base_Url', base_Url);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	]
}